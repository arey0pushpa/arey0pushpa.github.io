@import url(https://fonts.googleapis.com/css?family=Lato:300italic,700italic,300,700);

.description {
  color: #fff;
}

.description em {
  color: #ffa500;
}

body {
  padding:50px;
  font:14px/1.5 Lato, "Helvetica Neue", Helvetica, Arial, sans-serif;
  color:#292f33;
  font-weight:300;
}

h1, h2, h3, h4, h5, h6 {
  color:#222;
  margin:0 0 20px;
}

p, ul, ol, table, pre, dl {
  margin:0 0 20px;
}

h1, h2, h3 {
  line-height:1.1;
}

h1 {
  font-size:28px;
}

h2 {
  color:#393939;
}

h3, h4, h5, h6 {
  color:#494949;
}

a {
  color:#39c;
  font-weight:400;
  text-decoration:none;
}

a small {
  font-size:11px;
  color:#777;
  margin-top:-0.6em;
  display:block;
}

.wrapper {
  width:860px;
  margin:0 auto;
}

blockquote {
  border-left:1px solid #e5e5e5;
  margin:0;
  padding:0 0 0 20px;
  font-style:italic;
}

code, pre {
  font-family:Monaco, Bitstream Vera Sans Mono, Lucida Console, Terminal;
  color:#333;
  font-size:12px;
}

pre {
  padding:8px 15px;
  background: #f8f8f8;  
  border-radius:5px;
  border:1px solid #e5e5e5;
  overflow-x: auto;
}

table {
  width:100%;
  border-collapse:collapse;
}

th, td {
  text-align:left;
  padding:5px 10px;
  border-bottom:1px solid #e5e5e5;
}

dt {
  color:#444;
  font-weight:700;
}

th {
  color:#444;
}

img {
  max-width:100%;
}

header {
  width:270px;
  float:left;
  position:fixed;
}

header ul {
  list-style:none;
  height:40px;
  
  padding:0;
  
  background: #eee;
  background: -moz-linear-gradient(top, #f8f8f8 0%, #dddddd 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#f8f8f8), color-stop(100%,#dddddd));
  background: -webkit-linear-gradient(top, #f8f8f8 0%,#dddddd 100%);
  background: -o-linear-gradient(top, #f8f8f8 0%,#dddddd 100%);
  background: -ms-linear-gradient(top, #f8f8f8 0%,#dddddd 100%);
  background: linear-gradient(top, #f8f8f8 0%,#dddddd 100%);
  
  border-radius:5px;
  border:1px solid #d2d2d2;
  box-shadow:inset #fff 0 1px 0, inset rgba(0,0,0,0.03) 0 -1px 0;
  width:270px;
}

header li {
  width:89px;
  float:left;
  border-right:1px solid #d2d2d2;
  height:40px;
}

header ul a {
  line-height:1;
  font-size:11px;
  color:#999;
  display:block;
  text-align:center;
  padding-top:6px;
  height:40px;
}

strong {
  color:#222;
  font-weight:700;
}

header ul li + li {
  width:88px;
  border-left:1px solid #fff;
}

header ul li + li + li {
  border-right:none;
  width:89px;
}

header ul a strong {
  font-size:14px;
  display:block;
  color:#222;
}

section {
  width:500px;
  float:right;
  padding-bottom:50px;
}

small {
  font-size:11px;
}

hr {
  border:0;
  background:#e5e5e5;
  height:1px;
  margin:0 0 20px;
}

footer {
  width:270px;
  float:left;
  position:fixed;
  bottom:50px;
}

@media print, screen and (max-width: 960px) {
  
  div.wrapper {
    width:auto;
    margin:0;
  }
  
  header, section, footer {
    float:none;
    position:static;
    width:auto;
  }
  
  header {
    padding-right:320px;
  }
  
  section {
    border:1px solid #e5e5e5;
    border-width:1px 0;
    padding:20px 0;
    margin:0 0 20px;
  }
  
  header a small {
    display:inline;
  }
  
  header ul {
    position:absolute;
    right:50px;
    top:52px;
  }
}

@media print, screen and (max-width: 720px) {
  body {
    word-wrap:break-word;
  }
  
  header {
    padding:0;
  }
  
  header ul, header p.view {
    position:static;
  }
  
  pre, code {
    word-wrap:normal;
  }
}

@media print, screen and (max-width: 480px) {
  body {
    padding:15px;
  }
  
  header ul {
    display:none;
  }
}

@media print {
  body {
    padding:0.4in;
    font-size:12pt;
    color:#444;
  }
}
@import compass

// animation vars
$duration: 0.35s
$bounce: cubic-bezier(0.375, 1.495, 0.610, 0.780)

// dimensions
$height: 300px
$width: 200px

.count
	box-shadow: 0 10px 5px -5px rgba(#000, 0.2)
	height: $height
	left: 50%
	line-height: $height
	margin: -($height / 2) 0 0 -($width / 2)
	+perspective(500px)
	position: absolute
	text-align: center
	top: 50%
	+translateZ(0)
	width: $width

	// the basic "card"
	//    there are four of these: top current, top next, bottom current, and bottom next
	span
		background: #202020
		color: #f8f8f8
		display: block
		font-size: 250px
		left: 0
		position: absolute
		top: 0
		text-shadow: 0 1px 0 (#000 + 40), 0 2px 0 (#000 + 30), 0 3px 0 (#000 + 20), 0 4px 0 (#000 + 10), 0 5px 0 #000, 0 0 10px rgba(#000, 0.8)
		+transform-origin(0, 150px, 0)
		width: 100%

		// the dividing line in the center
		&:before
			border-bottom: 2px solid #000
			content: ''
			left: 0
			position: absolute
			width: 100%

		// a shadow fill that adds some convexity on the card surfaces
		&:after
			box-shadow: inset 0 0 60px rgba(#000, 0.35)
			content: ''
			height: 100%
			left: 0
			position: absolute
			top: 0
			width: 100%

	// two-digit numbers get the 'small' class
	.small
		font-size: 175px

	.top
		// top card sit above the bottom ones, so if we give them the same
		//   border radius they'll create some crunchiness.
		//   instead, go one pixel smaller
		border-top-left-radius: 11px
		border-top-right-radius: 11px

		// creating a light shine on the top of the card
		box-shadow: inset 0 2px rgba(#000, 0.9), inset 0 3px 0 rgba(#fff, 0.4)

		// top cards are only 50% height, and overflow-hidden
		//   so they only show the top of their number
		height: 50%
		overflow: hidden

		&:before
			bottom: 0

		&:after
			// top card needs to get darker as it curves downward
			+background(linear-gradient(rgba(#000, 0), rgba(#000, 0.15)))
			border-top-left-radius: 11px
			border-top-right-radius: 11px

	.bottom
		// bottom cards are 100% height, but their top half is hidden by "top" cards
		//   this was the best way I could think of to show the bottom cards in half, but
		//   there's probably another way using display: table-cell and vertical-align.
		//   ew.
		border-radius: 10px
		height: 100%

		&:before
			top: 50%

		&:after
			border-radius: 10px
			+background(linear-gradient(rgba(#fff, 0.1), rgba(#fff, 0.1) 50%, rgba(#fff, 0)))

	// styles that only apply when counting "down"
	&.down
		.top
			// use a higher number than the bottoms to prevent crunchy border radiuses
			border-top-left-radius: 11px
			border-top-right-radius: 11px
			height: 50%

			&.current
				// required to prevent safari bug: https://bugs.webkit.org/show_bug.cgi?id=61824
				+transform-style(flat)
				z-index: 3

			&.next
				// when counting down, the next top card is rotated towards the user (and invisible)
				+transform(rotate3d(1, 0, 0, -90deg))
				z-index: 4

		.bottom
			border-radius: 10px

			&.current
				z-index: 2

			&.next
				z-index: 1

		&.changing
			.bottom.current
				box-shadow: 0 75px 5px -20px rgba(#000, 0.3)
				+transform(rotate3d(1, 0, 0, 90deg))

				// the current bottom card rotates up to hide itself, and reveal the next one
				+transition(transform $duration ease-in, box-shadow $duration ease-in)

		&.changing,
		&.changed
			.top.next
				// and the next top card rotates into view (after $duration)
				+transition(transform $duration ease-out $duration)
				+transform(none)

	&.up
		.top
			height: 50%

			&.current
				z-index: 4

			&.next
				z-index: 3

		.bottom
			&.current
				z-index: 1

			&.next
				box-shadow: 0 75px 5px -20px rgba(#000, 0.3)

				// when counting "up", the next bottom card begins pointed at the user...
				+transform(rotate3d(1, 0, 0, 90deg))
				z-index: 2

		&.changing
			.top.current
				// and the current top card does the rotating
				+transform(rotate3d(1, 0, 0, -90deg))

				// when the card is "dropping" it should be faster
				+transition(transform $duration * 0.75 ease-in, box-shadow $duration * 0.75 ease-in)

		&.changing,
		&.changed
			.bottom.next
				box-shadow: 0 0 0 0 rgba(#000, 0)

				// add a little bounce at the moment the card finishes falling
				+transition(box-shadow $duration / 2 $bounce $duration, transform $duration $bounce $duration)
				+transform(rotate3d(1, 0, 0, 0))

	&.changed
		.top.current,
		.bottom.current
			display: none
